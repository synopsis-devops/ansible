
####accessing facts####  

ansible -i customhosts www -m setup | less

ansible-playbook -i customhosts db.yml -e mysql_bind=127.0.0.1


debug: msg="The variable is {{ foo.stdout }}"
---
 - hosts: all

   vars_files:
    - vars.yml

vars:
	apache_version: 2.6
	motd_warning: 'WARNING: Use by ACME Employees ONLY'
	testserver: yes

vars_files:
	conf/country-AU.yml
	conf/datacenter-SYD.yml
	conf/cluster-mysql.yml


#####Accessing variables of other hosts#################

 {{ hostvars[host]['ansible_date_time']['epoch'] }}
{{ hostvars['db.example.com'].ansible_eth1.ipv4.address }}
 
##### ACCESSING DICTIONARY KEYS IN A VARIABLE######
 {{ login.stdout }}
 
 {{ login['stdout'] }}
 
 
   vars:
    dict1: {hostname: "test", ip: "127.0.0.1"}
    list_dict2:
      - {hostname: "test2", ip: "127.0.0.2"}
      - {hostname: "test3", ip: "127.0.0.3"}
    list_dict3: 
      - {hostname: "test4", ip: [ "127.0.0.4", "127.0.0.5", "127.0.0.6" ] }

 
 debug: msg=" hostname is {{dict1.hostname}} and ip is {{dict1.ip}}"
 
 debug: msg=" hostname is {{item.hostname}} and ip is {{item.ip}}"
 
 
 
   #- name: look up value in Redis  
   # debug: msg="{{ lookup('redis_kv', 'redis://192.168.1.65:6379,soft_id') }} 

   - name: install firefox 
    yum:
      name: "{{lookup('csvfile', 'brow file=lk.csv delimiter=, col=1')}}"
      state: latest

 
 
{{ ansible_devices.sda.model }}





{{ ansible_nodename }}



{{ hostvars['asdf.example.com']['ansible_os_family'] }}


{{ ansible_eth0["ipv4"]["address"] }}



{{ ansible_eth0.ipv4.address }}

{{ lookup('dig', 'redhat.com. qtype=MX') }}

{{ hostvars['test.example.com']['ansible_distribution'] }}


##commnets :testing webhooks
##comments can be messy
As of Ansible 1.3, extra vars can be loaded from a JSON file with the @ syntax:
text
--extra-vars "@some_file.json"